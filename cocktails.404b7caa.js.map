{"mappings":"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","sources":["src/js/favoritesCoctails.js","node_modules/@parcel/runtime-js/lib/runtime-75de342b6431973a.js","node_modules/@parcel/runtime-js/lib/runtime-82d7aae5d2e36dc9.js"],"sourcesContent":["import axios from 'axios';\nimport FavoritesList from './favorites-storage-class';\nimport BASE_URL from './base-url';\nimport * as icons from '../images/icons.svg';\n\nconst storageData = new FavoritesList();\nconsole.log(storageData.ingredients);\nconst listCocktails = document.querySelector('.favorite-cocktails__list');\nconst listIngridient = document.querySelector('.favorite-ingredients__list');\n\n// Пустий список//\n\nfunction renderListCocktail() {\n  const message = `<p class=\"favorite-cocktails__text\">\n          You haven't added any favorite cocktails yet\n        </p>`;\n  listCocktails.insertAdjacentHTML('beforebegin', message);\n}\n\n//Запит API//\nasync function fetchDataCoctail(id) {\n  try {\n    const { data } = await axios.get(`${BASE_URL}lookup.php?i=${id}`);\n    return data.drinks[0];\n  } catch (error) {\n    console.log(error);\n  }\n}\n//Перевірка на пустий localStorage//\nif (storageData.cocktails.length === 0) {\n  return renderListCocktail();\n}\napiForIdCoctail();\n//Запит по id на коктель//\nasync function apiForIdCoctail() {\n  try {\n    const cocktails = storageData.cocktails;\n\n    const coctl = await Promise.all(\n      cocktails.map(async id => {\n        return await fetchDataCoctail(id);\n      })\n    );\n    if (!storageData.cocktails) {\n      renderListCocktail();\n    }\n    return createCardCoctail(coctl);\n  } catch (error) {\n    console.log(error);\n  }\n}\n//Видалити з localStorage//\nfunction onBtnClick(event) {\n  const cocktailId = event.target.dataset.id;\n  if (storageData.cocktails.includes(cocktailId)) {\n    storageData.removeCocktail(cocktailId);\n  } else if (!storageData.cocktails) {\n    renderListCocktail();\n  }\n  return;\n}\n//Рендер картки//\nfunction createCardCoctail(data) {\n  let card = data\n    .map(item => {\n      return `<li class=\"favorite-cocktails__item\">\n            <img class=\"favorite-cocktails__item-img\" src=\"${item.strDrinkThumb}\" alt=\"\" />\n            <div class=\"favorite-cocktails__item-container\">\n              <h2 class=\"favorite-cocktails__item-title\">${item.strDrink}</h2>\n              <div class=\"favorite-button-container\">\n                <button type=\"button\" data-type=\"open-learn-more\" class=\"favorite-button__learn-more\">\n                  Learn more\n                </button>\n                <button type=\"button\" data-id=\"${item.idDrink}\" class=\"favorite-button__remove\">\n                  Remove\n                  <svg class=\"favorite-button__icon\" width=\"17\" height=\"15\">\n                    <use href=\"${icons}#icon-full-heart\"></use>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </li>\n    `;\n    })\n    .join('');\n\n  listCocktails.insertAdjacentHTML('beforeend', card);\n  const galleryFavorits = document.querySelector('.favorite-cocktails');\n  galleryFavorits.addEventListener('click', onBtnClick);\n}\n\nif (storageData.ingredients.length === 0) {\n  return renderListIngredient();\n}\napiForIdIngredient();\n\nfunction renderListIngredient() {\n  const message = `  <p class=\"favorite-ingredients__text\">\n          You haven't added any favorite ingridients yet\n      </p>`;\n\n  listIngridient.insertAdjacentHTML('beforbegin', message);\n}\n\nasync function apiForIdIngredient() {\n  try {\n    const ingredients = storageData.ingredients;\n\n    const ingredient = await Promise.all(\n      ingredients.map(async id => {\n        return await fetchDataCoctail(id);\n      })\n    );\n    if (!storageData.ingredients) {\n      renderListCocktail();\n    }\n    return createCardIngridient(ingredient);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction createCardIngridient(data) {\n  let card = data\n    .map(item => {\n      return `<li class=\"favorite-ingredients__item\">\n            <h2 class=\"favorite-ingredients__item-title\">${item.strDrink}</h2>\n            <p class=\"favorite-ingredients__item-text\">Liqueur</p>\n            <div class=\"favorite-button-container\">\n              <button type=\"button\" class=\"favorite-button__learn-more\">\n                Learn more\n              </button>\n              <button type=\"button\" class=\"favorite-button__remove\">\n                Remove\n                <svg class=\"favorite-button__icon\" width=\"17\" height=\"15\">\n                  <use href=\"./images/icons.svg#icon-full-heart\"></use>\n                </svg>\n              </button>\n            </div>\n          </li>\n  `;\n    })\n    .join('');\n  listIngridient.insertAdjacentHTML('beforeend', card);\n  const galleryFavorits = document.querySelector('.favorite-cocktails');\n  galleryFavorits.addEventListener('click', onBtnClick);\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('27uyE') + require('./helpers/bundle-manifest').resolve(\"410VS\");","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"27uyE\\\":\\\"cocktails.404b7caa.js\\\",\\\"410VS\\\":\\\"icons.5e4a2d51.svg\\\"}\"));"],"names":["$bpxeT","parcelRequire","storageData","$fqZse","default","console","log","ingredients","listCocktails","document","querySelector","listIngridient","renderListCocktail","insertAdjacentHTML","fetchDataCoctail","id","_fetchDataCoctail","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","get","concat","$5RN7g","_ctx","sent","drinks","t0","cocktails","length","_apiForIdCoctail","_callee1","coctl","Promise","all","map","_ctx1","createCardCoctail","onBtnClick","event","cocktailId","target","dataset","includes","removeCocktail","card","item","strDrinkThumb","strDrink","idDrink","$6HPGa","join","addEventListener","_apiForIdIngredient","_callee2","ingredient","_ctx2","createCardIngridient","apiForIdCoctail","apiForIdIngredient","module","exports","getBundleURL","resolve","register","JSON","parse"],"version":3,"file":"cocktails.404b7caa.js.map"}